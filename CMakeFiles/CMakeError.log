Determining if the prototype gethostbyname_r exists for HAVE_GETHOSTBYNAME_R_3_ARG failed with the following output:
Change Dir: /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_b61e2/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_b61e2.dir/build.make CMakeFiles/cmTC_b61e2.dir/build
gmake[1]: Entering directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b61e2.dir/CheckPrototypeDefinition.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_b61e2.dir/CheckPrototypeDefinition.c.o -c /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:66: warning: ‘struct hostent_data’ declared inside parameter list will not be visible outside of this definition or declaration
   14 | int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
      |                                                                  ^~~~~~~~~~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:5: error: conflicting types for ‘gethostbyname_r’; have ‘int(const char *, struct hostent *, struct hostent_data *)’
   14 | int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
      |     ^~~~~~~~~~~~~~~
In file included from /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:1:
/usr/include/netdb.h:177:12: note: previous declaration of ‘gethostbyname_r’ with type ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  size_t,  struct hostent ** restrict,  int * restrict)’ {aka ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  long unsigned int,  struct hostent ** restrict,  int * restrict)’}
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
gmake[1]: *** [CMakeFiles/cmTC_b61e2.dir/build.make:78: CMakeFiles/cmTC_b61e2.dir/CheckPrototypeDefinition.c.o] Error 1
gmake[1]: Leaving directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_b61e2/fast] Error 2



#include <netdb.h>


static void cmakeRequireSymbol(int dummy, ...) {
  (void) dummy;
}

static void checkSymbol(void) {
#ifndef gethostbyname_r
  cmakeRequireSymbol(0, &gethostbyname_r);
#endif
}

int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
  return 0;
}

#ifdef __CLASSIC_C__
int main() {
  int ac;
  char*av[];
#else
int main(int ac, char *av[]) {
#endif
  checkSymbol();
  if (ac > 1000) {
    return *av[0];
  }
  return 0;
}


Determining if the prototype gethostbyname_r exists for HAVE_GETHOSTBYNAME_R_5_ARG failed with the following output:
Change Dir: /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_f5186/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_f5186.dir/build.make CMakeFiles/cmTC_f5186.dir/build
gmake[1]: Entering directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f5186.dir/CheckPrototypeDefinition.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_f5186.dir/CheckPrototypeDefinition.c.o -c /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:17: error: conflicting types for ‘gethostbyname_r’; have ‘struct hostent *(const char *, struct hostent *, char *, size_t,  int *)’ {aka ‘struct hostent *(const char *, struct hostent *, char *, long unsigned int,  int *)’}
   14 | struct hostent *gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen, int *herr) {
      |                 ^~~~~~~~~~~~~~~
In file included from /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:1:
/usr/include/netdb.h:177:12: note: previous declaration of ‘gethostbyname_r’ with type ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  size_t,  struct hostent ** restrict,  int * restrict)’ {aka ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  long unsigned int,  struct hostent ** restrict,  int * restrict)’}
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c: In function ‘gethostbyname_r’:
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:15:10: error: ‘NULL’ undeclared (first use in this function)
   15 |   return NULL;
      |          ^~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:2:1: note: ‘NULL’ is defined in header ‘<stddef.h>’; did you forget to ‘#include <stddef.h>’?
    1 | #include <netdb.h>
  +++ |+#include <stddef.h>
    2 | 
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:15:10: note: each undeclared identifier is reported only once for each function it appears in
   15 |   return NULL;
      |          ^~~~
gmake[1]: *** [CMakeFiles/cmTC_f5186.dir/build.make:78: CMakeFiles/cmTC_f5186.dir/CheckPrototypeDefinition.c.o] Error 1
gmake[1]: Leaving directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_f5186/fast] Error 2



#include <netdb.h>


static void cmakeRequireSymbol(int dummy, ...) {
  (void) dummy;
}

static void checkSymbol(void) {
#ifndef gethostbyname_r
  cmakeRequireSymbol(0, &gethostbyname_r);
#endif
}

struct hostent *gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen, int *herr) {
  return NULL;
}

#ifdef __CLASSIC_C__
int main() {
  int ac;
  char*av[];
#else
int main(int ac, char *av[]) {
#endif
  checkSymbol();
  if (ac > 1000) {
    return *av[0];
  }
  return 0;
}


Determining if the prototype gethostbyname_r exists for HAVE_GETHOSTBYNAME_R_3_ARG failed with the following output:
Change Dir: /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_7d5d6/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_7d5d6.dir/build.make CMakeFiles/cmTC_7d5d6.dir/build
gmake[1]: Entering directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7d5d6.dir/CheckPrototypeDefinition.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_7d5d6.dir/CheckPrototypeDefinition.c.o -c /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:66: warning: ‘struct hostent_data’ declared inside parameter list will not be visible outside of this definition or declaration
   14 | int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
      |                                                                  ^~~~~~~~~~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:5: error: conflicting types for ‘gethostbyname_r’; have ‘int(const char *, struct hostent *, struct hostent_data *)’
   14 | int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
      |     ^~~~~~~~~~~~~~~
In file included from /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:1:
/usr/include/netdb.h:177:12: note: previous declaration of ‘gethostbyname_r’ with type ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  size_t,  struct hostent ** restrict,  int * restrict)’ {aka ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  long unsigned int,  struct hostent ** restrict,  int * restrict)’}
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
gmake[1]: *** [CMakeFiles/cmTC_7d5d6.dir/build.make:78: CMakeFiles/cmTC_7d5d6.dir/CheckPrototypeDefinition.c.o] Error 1
gmake[1]: Leaving directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_7d5d6/fast] Error 2



#include <netdb.h>


static void cmakeRequireSymbol(int dummy, ...) {
  (void) dummy;
}

static void checkSymbol(void) {
#ifndef gethostbyname_r
  cmakeRequireSymbol(0, &gethostbyname_r);
#endif
}

int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
  return 0;
}

#ifdef __CLASSIC_C__
int main() {
  int ac;
  char*av[];
#else
int main(int ac, char *av[]) {
#endif
  checkSymbol();
  if (ac > 1000) {
    return *av[0];
  }
  return 0;
}


Determining if the prototype gethostbyname_r exists for HAVE_GETHOSTBYNAME_R_5_ARG failed with the following output:
Change Dir: /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_6d199/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_6d199.dir/build.make CMakeFiles/cmTC_6d199.dir/build
gmake[1]: Entering directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6d199.dir/CheckPrototypeDefinition.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_6d199.dir/CheckPrototypeDefinition.c.o -c /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:17: error: conflicting types for ‘gethostbyname_r’; have ‘struct hostent *(const char *, struct hostent *, char *, size_t,  int *)’ {aka ‘struct hostent *(const char *, struct hostent *, char *, long unsigned int,  int *)’}
   14 | struct hostent *gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen, int *herr) {
      |                 ^~~~~~~~~~~~~~~
In file included from /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:1:
/usr/include/netdb.h:177:12: note: previous declaration of ‘gethostbyname_r’ with type ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  size_t,  struct hostent ** restrict,  int * restrict)’ {aka ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  long unsigned int,  struct hostent ** restrict,  int * restrict)’}
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c: In function ‘gethostbyname_r’:
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:15:10: error: ‘NULL’ undeclared (first use in this function)
   15 |   return NULL;
      |          ^~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:2:1: note: ‘NULL’ is defined in header ‘<stddef.h>’; did you forget to ‘#include <stddef.h>’?
    1 | #include <netdb.h>
  +++ |+#include <stddef.h>
    2 | 
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:15:10: note: each undeclared identifier is reported only once for each function it appears in
   15 |   return NULL;
      |          ^~~~
gmake[1]: *** [CMakeFiles/cmTC_6d199.dir/build.make:78: CMakeFiles/cmTC_6d199.dir/CheckPrototypeDefinition.c.o] Error 1
gmake[1]: Leaving directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_6d199/fast] Error 2



#include <netdb.h>


static void cmakeRequireSymbol(int dummy, ...) {
  (void) dummy;
}

static void checkSymbol(void) {
#ifndef gethostbyname_r
  cmakeRequireSymbol(0, &gethostbyname_r);
#endif
}

struct hostent *gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen, int *herr) {
  return NULL;
}

#ifdef __CLASSIC_C__
int main() {
  int ac;
  char*av[];
#else
int main(int ac, char *av[]) {
#endif
  checkSymbol();
  if (ac > 1000) {
    return *av[0];
  }
  return 0;
}


Determining if the prototype gethostbyname_r exists for HAVE_GETHOSTBYNAME_R_3_ARG failed with the following output:
Change Dir: /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_5bc0c/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_5bc0c.dir/build.make CMakeFiles/cmTC_5bc0c.dir/build
gmake[1]: Entering directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5bc0c.dir/CheckPrototypeDefinition.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_5bc0c.dir/CheckPrototypeDefinition.c.o -c /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:66: warning: ‘struct hostent_data’ declared inside parameter list will not be visible outside of this definition or declaration
   14 | int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
      |                                                                  ^~~~~~~~~~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:5: error: conflicting types for ‘gethostbyname_r’; have ‘int(const char *, struct hostent *, struct hostent_data *)’
   14 | int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
      |     ^~~~~~~~~~~~~~~
In file included from /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:1:
/usr/include/netdb.h:177:12: note: previous declaration of ‘gethostbyname_r’ with type ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  size_t,  struct hostent ** restrict,  int * restrict)’ {aka ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  long unsigned int,  struct hostent ** restrict,  int * restrict)’}
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
gmake[1]: *** [CMakeFiles/cmTC_5bc0c.dir/build.make:78: CMakeFiles/cmTC_5bc0c.dir/CheckPrototypeDefinition.c.o] Error 1
gmake[1]: Leaving directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_5bc0c/fast] Error 2



#include <netdb.h>


static void cmakeRequireSymbol(int dummy, ...) {
  (void) dummy;
}

static void checkSymbol(void) {
#ifndef gethostbyname_r
  cmakeRequireSymbol(0, &gethostbyname_r);
#endif
}

int gethostbyname_r(const char *name, struct hostent *hp, struct hostent_data *hdata) {
  return 0;
}

#ifdef __CLASSIC_C__
int main() {
  int ac;
  char*av[];
#else
int main(int ac, char *av[]) {
#endif
  checkSymbol();
  if (ac > 1000) {
    return *av[0];
  }
  return 0;
}


Determining if the prototype gethostbyname_r exists for HAVE_GETHOSTBYNAME_R_5_ARG failed with the following output:
Change Dir: /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_792bf/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_792bf.dir/build.make CMakeFiles/cmTC_792bf.dir/build
gmake[1]: Entering directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_792bf.dir/CheckPrototypeDefinition.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_792bf.dir/CheckPrototypeDefinition.c.o -c /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:14:17: error: conflicting types for ‘gethostbyname_r’; have ‘struct hostent *(const char *, struct hostent *, char *, size_t,  int *)’ {aka ‘struct hostent *(const char *, struct hostent *, char *, long unsigned int,  int *)’}
   14 | struct hostent *gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen, int *herr) {
      |                 ^~~~~~~~~~~~~~~
In file included from /home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:1:
/usr/include/netdb.h:177:12: note: previous declaration of ‘gethostbyname_r’ with type ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  size_t,  struct hostent ** restrict,  int * restrict)’ {aka ‘int(const char * restrict,  struct hostent * restrict,  char * restrict,  long unsigned int,  struct hostent ** restrict,  int * restrict)’}
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c: In function ‘gethostbyname_r’:
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:15:10: error: ‘NULL’ undeclared (first use in this function)
   15 |   return NULL;
      |          ^~~~
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:2:1: note: ‘NULL’ is defined in header ‘<stddef.h>’; did you forget to ‘#include <stddef.h>’?
    1 | #include <netdb.h>
  +++ |+#include <stddef.h>
    2 | 
/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp/CheckPrototypeDefinition.c:15:10: note: each undeclared identifier is reported only once for each function it appears in
   15 |   return NULL;
      |          ^~~~
gmake[1]: *** [CMakeFiles/cmTC_792bf.dir/build.make:78: CMakeFiles/cmTC_792bf.dir/CheckPrototypeDefinition.c.o] Error 1
gmake[1]: Leaving directory '/home/thanh/qf_test/quickfix/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_792bf/fast] Error 2



#include <netdb.h>


static void cmakeRequireSymbol(int dummy, ...) {
  (void) dummy;
}

static void checkSymbol(void) {
#ifndef gethostbyname_r
  cmakeRequireSymbol(0, &gethostbyname_r);
#endif
}

struct hostent *gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen, int *herr) {
  return NULL;
}

#ifdef __CLASSIC_C__
int main() {
  int ac;
  char*av[];
#else
int main(int ac, char *av[]) {
#endif
  checkSymbol();
  if (ac > 1000) {
    return *av[0];
  }
  return 0;
}


